{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\office\\\\project\\\\frontend\\\\src\\\\chatbot\\\\config.js\";\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\n//import SymptomsDropdown from './SymptomsDropdown';\nimport SymptomsButtons from './SymptomsButtons';\n//import avatar from './Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  initialMessages: [createChatBotMessage(`Hi. Please enter your animal category!`)],\n  botName: 'Doctor',\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: '#474d5e'\n    },\n    chatButton: {\n      backgroundColor: '#474d5e'\n    }\n  },\n  customComponents: {},\n  /* widgets: [\r\n     {\r\n         widgetName: \"SymptomsDropdown\",\r\n         widgetFunc: (props) => <SymptomsDropdown {...props} />\r\n         \r\n     }\r\n  ],*/\n  widgets: [{\n    widgetName: \"symptomsButtons\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(SymptomsButtons, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this),\n    mapStateToProps: [\"messages\"],\n    props: {}\n  }],\n  state: {},\n  actionProvider: new ActionProvider(),\n  messageParser: new MessageParser(),\n  eventHandlers: {\n    onButtonClicked: (event, setState) => {\n      // Assuming `event.value` holds the button's value\n      const actionProvider = new ActionProvider(setState);\n      actionProvider.handleSymptomSelection(event.value);\n    }\n  }\n};\nexport default config;","map":{"version":3,"names":["createChatBotMessage","ActionProvider","MessageParser","SymptomsButtons","jsxDEV","_jsxDEV","config","initialMessages","botName","customStyles","botMessageBox","backgroundColor","chatButton","customComponents","widgets","widgetName","widgetFunc","props","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","actionProvider","messageParser","eventHandlers","onButtonClicked","event","setState","handleSymptomSelection","value"],"sources":["D:/Uni/office/project/frontend/src/chatbot/config.js"],"sourcesContent":["import { createChatBotMessage } from 'react-chatbot-kit';\r\nimport ActionProvider from './ActionProvider';\r\nimport MessageParser from './MessageParser';\r\n//import SymptomsDropdown from './SymptomsDropdown';\r\nimport SymptomsButtons from './SymptomsButtons';\r\n//import avatar from './Avatar';\r\n\r\nconst config = {\r\n  initialMessages: [createChatBotMessage(`Hi. Please enter your animal category!`)],\r\n  botName: 'Doctor',\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: '#474d5e',\r\n    },\r\n    chatButton: {\r\n      backgroundColor: '#474d5e',\r\n    },\r\n  },\r\n  customComponents:{\r\n\r\n  },\r\n  \r\n /* widgets: [\r\n    {\r\n        widgetName: \"SymptomsDropdown\",\r\n        widgetFunc: (props) => <SymptomsDropdown {...props} />\r\n        \r\n    }\r\n],*/\r\nwidgets: [\r\n  {\r\n    widgetName: \"symptomsButtons\",\r\n    widgetFunc: (props) => <SymptomsButtons {...props} />,\r\n    mapStateToProps: [\"messages\"],\r\n    props: {}\r\n  }\r\n],\r\n\r\n  state: {},\r\n  actionProvider: new ActionProvider(), \r\n  messageParser: new MessageParser(),\r\n  eventHandlers: {\r\n    onButtonClicked: (event, setState) => {\r\n      // Assuming `event.value` holds the button's value\r\n      const actionProvider = new ActionProvider(setState);\r\n      actionProvider.handleSymptomSelection(event.value);\r\n    }\r\n  }\r\n  \r\n  \r\n};\r\n\r\nexport default config;"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,mBAAmB;AACxD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAG;EACbC,eAAe,EAAE,CAACP,oBAAoB,CAAC,wCAAwC,CAAC,CAAC;EACjFQ,OAAO,EAAE,QAAQ;EACjBC,YAAY,EAAE;IACZC,aAAa,EAAE;MACbC,eAAe,EAAE;IACnB,CAAC;IACDC,UAAU,EAAE;MACVD,eAAe,EAAE;IACnB;EACF,CAAC;EACDE,gBAAgB,EAAC,CAEjB,CAAC;EAEF;AACD;AACA;AACA;AACA;AACA;AACA;EACAC,OAAO,EAAE,CACP;IACEC,UAAU,EAAE,iBAAiB;IAC7BC,UAAU,EAAGC,KAAK,iBAAKZ,OAAA,CAACF,eAAe;MAAA,GAAKc;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IACrDC,eAAe,EAAE,CAAC,UAAU,CAAC;IAC7BL,KAAK,EAAE,CAAC;EACV,CAAC,CACF;EAECM,KAAK,EAAE,CAAC,CAAC;EACTC,cAAc,EAAE,IAAIvB,cAAc,CAAC,CAAC;EACpCwB,aAAa,EAAE,IAAIvB,aAAa,CAAC,CAAC;EAClCwB,aAAa,EAAE;IACbC,eAAe,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MACpC;MACA,MAAML,cAAc,GAAG,IAAIvB,cAAc,CAAC4B,QAAQ,CAAC;MACnDL,cAAc,CAACM,sBAAsB,CAACF,KAAK,CAACG,KAAK,CAAC;IACpD;EACF;AAGF,CAAC;AAED,eAAezB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}