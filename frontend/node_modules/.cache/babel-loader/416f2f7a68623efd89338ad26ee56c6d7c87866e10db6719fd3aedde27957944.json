{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\office\\\\project\\\\frontend\\\\src\\\\chatbot\\\\SymptomsDropdown.js\";\n// components/SymptomsDropdown.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomsDropdown = ({\n  setState,\n  actionProvider\n}) => {\n  const symptoms = [\"Fatigue\", \"Fever\", \"Loss of Appetite\", \"Coughing\", \"Sneezing\"];\n  const handleChange = event => {\n    const selectedSymptom = event.target.value;\n    actionProvider.handleSelectedSymptom(selectedSymptom);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleChange,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select a symptom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: symptom,\n      children: symptom\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = SymptomsDropdown;\nexport default SymptomsDropdown;\nvar _c;\n$RefreshReg$(_c, \"SymptomsDropdown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SymptomsDropdown","setState","actionProvider","symptoms","handleChange","event","selectedSymptom","target","value","handleSelectedSymptom","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","map","symptom","index","_c","$RefreshReg$"],"sources":["D:/Uni/office/project/frontend/src/chatbot/SymptomsDropdown.js"],"sourcesContent":["// components/SymptomsDropdown.js\r\nimport React from 'react';\r\n\r\nconst SymptomsDropdown = ({ setState, actionProvider }) => {\r\n  const symptoms = [\"Fatigue\", \"Fever\", \"Loss of Appetite\", \"Coughing\", \"Sneezing\"];\r\n  \r\n  const handleChange = (event) => {\r\n    const selectedSymptom = event.target.value;\r\n    actionProvider.handleSelectedSymptom(selectedSymptom);\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleChange}>\r\n      <option value=\"\">Select a symptom</option>\r\n      {symptoms.map((symptom, index) => (\r\n        <option key={index} value={symptom}>{symptom}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SymptomsDropdown;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAe,CAAC,KAAK;EACzD,MAAMC,QAAQ,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,kBAAkB,EAAE,UAAU,EAAE,UAAU,CAAC;EAEjF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC1CN,cAAc,CAACO,qBAAqB,CAACH,eAAe,CAAC;EACvD,CAAC;EAED,oBACEP,OAAA;IAAQW,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC7BZ,OAAA;MAAQS,KAAK,EAAC,EAAE;MAAAG,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;MAAoBS,KAAK,EAAES,OAAQ;MAAAN,QAAA,EAAEM;IAAO,GAA/BC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACI,EAAA,GAhBInB,gBAAgB;AAkBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}