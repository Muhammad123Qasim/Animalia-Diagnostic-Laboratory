{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\office\\\\project\\\\frontend\\\\src\\\\chatbot\\\\SymptomsDropdown.js\";\n// components/SymptomsDropdown.js\nimport React from 'react';\nimport './dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomsDropdown = ({\n  actionProvider,\n  symptoms\n}) => {\n  const handleChange = event => {\n    const selectedSymptom = event.target.value;\n    if (selectedSymptom) {\n      actionProvider.handleSelectedSymptom(selectedSymptom);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleChange,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select a symptom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: symptom,\n      children: symptom\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = SymptomsDropdown;\nexport default SymptomsDropdown;\nvar _c;\n$RefreshReg$(_c, \"SymptomsDropdown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SymptomsDropdown","actionProvider","symptoms","handleChange","event","selectedSymptom","target","value","handleSelectedSymptom","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","map","symptom","index","_c","$RefreshReg$"],"sources":["D:/Uni/office/project/frontend/src/chatbot/SymptomsDropdown.js"],"sourcesContent":["// components/SymptomsDropdown.js\r\nimport React from 'react';\r\nimport './dropdown.css'\r\nconst SymptomsDropdown = ({ actionProvider, symptoms }) => {\r\n    const handleChange = (event) => {\r\n        const selectedSymptom = event.target.value;\r\n        if (selectedSymptom) {\r\n            actionProvider.handleSelectedSymptom(selectedSymptom);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <select onChange={handleChange}>\r\n            <option value=\"\">Select a symptom</option>\r\n            {symptoms.map((symptom, index) => (\r\n                <option key={index} value={symptom}>{symptom}</option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default SymptomsDropdown;\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EACvD,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC1C,IAAIF,eAAe,EAAE;MACjBJ,cAAc,CAACO,qBAAqB,CAACH,eAAe,CAAC;IACzD;EACJ,CAAC;EAED,oBACIN,OAAA;IAAQU,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BX,OAAA;MAAQQ,KAAK,EAAC,EAAE;MAAAG,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBlB,OAAA;MAAoBQ,KAAK,EAAES,OAAQ;MAAAN,QAAA,EAAEM;IAAO,GAA/BC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEjB,CAAC;AAACI,EAAA,GAhBIlB,gBAAgB;AAkBtB,eAAeA,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}