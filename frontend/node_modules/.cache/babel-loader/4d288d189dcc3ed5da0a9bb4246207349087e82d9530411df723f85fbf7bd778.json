{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\office\\\\project\\\\frontend\\\\src\\\\chatbot\\\\SymptomsDropdown.js\";\n// components/SymptomsDropdown.js\n/*import React, {useEffect} from 'react';\r\nimport './dropdown.css'\r\n\r\nconst SymptomsDropdown = ({ symptoms, actionProvider }) => {\r\n  //const symptoms = [\"Fatigue\", \"Fever\", \"Loss of Appetite\", \"Coughing\", \"Sneezing\"];\r\n  useEffect(() => {\r\n    console.log(\"Symptoms received in dropdown:\", symptoms);\r\n  });\r\n  const handleChange = (event) => {\r\n    const selectedSymptom = event.target.value;\r\n    \r\n    actionProvider.handleSelectedSymptom(selectedSymptom);\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleChange} className='dropdown' >\r\n      <option value=\"\">Select a symptom</option>\r\n      {symptoms && symptoms.map((symptom, index) => (\r\n        <option key={index} value={symptom}>{symptom}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SymptomsDropdown;*/\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SymptomsDropdown = ({\n  actionProvider,\n  options\n}) => {\n  const handleDropdownChange = event => {\n    const selectedSymptom = event.target.value;\n    // You can call an actionProvider method to handle the selected symptom\n    actionProvider.handleSelectedSymptom(selectedSymptom);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleDropdownChange,\n    defaultValue: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"Select your symptom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = SymptomsDropdown;\nexport default SymptomsDropdown;\nvar _c;\n$RefreshReg$(_c, \"SymptomsDropdown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SymptomsDropdown","actionProvider","options","handleDropdownChange","event","selectedSymptom","target","value","handleSelectedSymptom","onChange","defaultValue","children","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","option","label","_c","$RefreshReg$"],"sources":["D:/Uni/office/project/frontend/src/chatbot/SymptomsDropdown.js"],"sourcesContent":["// components/SymptomsDropdown.js\r\n/*import React, {useEffect} from 'react';\r\nimport './dropdown.css'\r\n\r\nconst SymptomsDropdown = ({ symptoms, actionProvider }) => {\r\n  //const symptoms = [\"Fatigue\", \"Fever\", \"Loss of Appetite\", \"Coughing\", \"Sneezing\"];\r\n  useEffect(() => {\r\n    console.log(\"Symptoms received in dropdown:\", symptoms);\r\n  });\r\n  const handleChange = (event) => {\r\n    const selectedSymptom = event.target.value;\r\n    \r\n    actionProvider.handleSelectedSymptom(selectedSymptom);\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleChange} className='dropdown' >\r\n      <option value=\"\">Select a symptom</option>\r\n      {symptoms && symptoms.map((symptom, index) => (\r\n        <option key={index} value={symptom}>{symptom}</option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SymptomsDropdown;*/\r\nimport React from 'react';\r\n\r\nconst SymptomsDropdown = ({ actionProvider, options }) => {\r\n  const handleDropdownChange = (event) => {\r\n    const selectedSymptom = event.target.value;\r\n    // You can call an actionProvider method to handle the selected symptom\r\n    actionProvider.handleSelectedSymptom(selectedSymptom);\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleDropdownChange} defaultValue=\"\">\r\n      <option value=\"\" disabled>Select your symptom</option>\r\n      {options.map(option => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SymptomsDropdown;\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EACxD,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC1C;IACAN,cAAc,CAACO,qBAAqB,CAACH,eAAe,CAAC;EACvD,CAAC;EAED,oBACEN,OAAA;IAAQU,QAAQ,EAAEN,oBAAqB;IAACO,YAAY,EAAC,EAAE;IAAAC,QAAA,gBACrDZ,OAAA;MAAQQ,KAAK,EAAC,EAAE;MAACK,QAAQ;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDd,OAAO,CAACe,GAAG,CAACC,MAAM,iBACjBnB,OAAA;MAA2BQ,KAAK,EAAEW,MAAM,CAACX,KAAM;MAAAI,QAAA,EAC5CO,MAAM,CAACC;IAAK,GADFD,MAAM,CAACX,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACI,EAAA,GAjBIpB,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}